
import org.gradle.plugins.signing.Sign

apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin:'application'
apply plugin: 'signing'
apply plugin: 'maven'

group 'com.software-ninja'
version version
mainClassName = "com.software_ninja.malabar.Malabar"

repositories {
  mavenCentral()   
  maven {
    url "http://artifacts.co.ihc.com/repomgr/content/groups/combined/"
  }
}

configurations {
    ivy
}

dependencies {
  ivy "org.apache.ivy:ivy:2.3.0"
  compile  "org.apache.ivy:ivy:2.3.0"
  testCompile  "org.apache.ivy:ivy:2.3.0"
  compile 'org.codehaus.groovy:groovy-all:2.3.7'
  compile 'org.apache.maven:maven-embedder:3.0.5'
  compile 'org.apache.maven:maven-core:3.0.5'
  compile 'org.apache.maven:maven-compat:3.0.5'
  compile 'org.apache.maven:maven-aether-provider:3.0.5'
  compile 'org.sonatype.aether:aether-connector-wagon:1.13.1'
  compile 'com.jcabi:jcabi-aether:0.10.1'
  compile 'jline:jline:2.11'
  compile 'org.fusesource.jansi:jansi:1.11'
  compile 'junit:junit:4.11'
  compile 'org.slf4j:slf4j-jdk14:1.7.5'

  testCompile 'net.java.quickcheck:quickcheck:0.6'

  // imports below here are grabbed via Grape at runtime
  testCompile 'com.jcabi:jcabi-aether:0.10.1'
  
}

tasks.withType(GroovyCompile) {
    groovyClasspath += configurations.ivy
}

tasks.withType(Test) {
  sourceSets.test.runtimeClasspath += configurations.ivy
}


//
// Running
//

run {    
    /* Can pass all the properties: */
    //systemProperties System.getProperties()

    /* Or just each by name: */
    //systemProperty "myvariable", System.getProperty("myvariable")

    /* Need to split the space-delimited value in the exec.args */
  if(System.getProperty("exec.args") != null) {
    args System.getProperty("exec.args").split()    
  }
}

//
// Deploy to Maven Central 
// Instructions at:
// http://jedicoder.blogspot.com/2011/11/automated-gradle-project-deployment-to.html
//

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}
 
task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
  archives jar
  archives javadocJar
  archives sourcesJar
}

apply from: "${profile}-build.gradle"

uploadArchives {
    repositories {
        mavenDeployer {
	  beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
	  repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
	      authentication(userName: ossrhUsername, password: ossrhPassword)
      	  }

          snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
              authentication(userName: ossrhUsername, password: ossrhPassword)
          } 
 
            pom.project {
               name 'malabar'
               packaging 'jar'
               description 'A Maven-enabled Java mode for Emacs'
               url 'https://github.com/m0smith/malabar-mode-jar'
 
               scm {
                   url 'https://github.com/m0smith/malabar-mode-jar.git'
                   connection 'scm:git:git@github.com:m0smith/malabar-mode-jar.git'
                   developerConnection 'scm:git:git@github.com:m0smith/malabar-mode-jar.git'
               }
 
               licenses {
                   license {
                       name 'The GNU General Public License, Version 2'
                       url 'http://www.gnu.org/licenses/gpl2.txt'
                       distribution 'repo'
                   }
               }
 
               developers {
                   developer {
                       id 'espenhw'
                       name 'Espen Wiborg'
		       email 'http://mailhide.recaptcha.net/d?k=01GFbnCG21M-KIunkjRjxWJw==&amp;c=BsOjYVXpToqQKNHwMd0ZRx5XPNMia6agfhzc3Fwtink='
		       roles {
			 role 'Evil Mastermind'
		       }
                   }
                   developer {
                       id 'dstu'
                       name 'Stu Black'
		       roles {
			 role 'Keeper of the flame'
		       } 
                   }
                   developer {
                       id 'm0smith'
                       name 'Matthew O. Smith'
		       roles {
			 role 'Reanimator'
		       } 
                   }
               }
           }
        }
    }
}

//
// RELEASE plugin config
//

buildscript {
   repositories {
     maven {   url "http://artifacts.co.ihc.com/repomgr/content/groups/combined/" }
      mavenCentral()
      maven { url "https://oss.sonatype.org/content/groups/public"}
      
   }
   dependencies {
      classpath 'com.github.townsfolk:gradle-release:1.2'
   }
}
apply plugin: 'release'

createReleaseTag.dependsOn uploadArchives

//
// Write a POM
//

task writeNewPom << {
    pom {
        project {
            inceptionYear '2008'
            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }
        }
    }.writeTo("$buildDir/newpom.xml")
}
